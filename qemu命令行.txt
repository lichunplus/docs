qemu-kvm [options] [disk_image]

OPTIONS
-name
    *guest=string      虚机名称显示在BIOS界面
    process=string     进程名称，显示在top中
    debug-threads=off  各线程名称，仅用于调试
    
    
-machine [type=]name[,prop=value[,...]]
    选择机器类型和属性 ("-machine ?" 列出支持的类型)
    例1：-machine pc-i440fx-2.9,? 列出对应类型支持的属性
    例2：-machine pc-i440fx-2.5,accel=kvm,tcg,usb=off,dump-guest-core=off
    
-cpu model
    选择CPU模型与特性 ("-cpu ?" 列出支持的模型和特性)
    比如，Intel CPU模型有：
    2.Sandy Bridge  支持vfio显卡透传-Legacy模式
    5.Broad well    支持vfio显卡透传-UPT模式
    6.Sky Lake
    例：-cpu Haswell,msr,fpt=on,kvmclock=off,hv_spinlocks=0x1fff
    备注：特性并不一定全部体现在/proc/cpuinfo文件中，比如kvmclock
    
-smp n[,cores=cores][,threads=threads][,sockets=sockets][,maxcpus=maxcpus]
    指定仿真SMP系统的类型n=cores*threads*sockets
    sockets=sockets指示总共有多个sockets
    cores=cores指示一个socket下有多个cores
    threads=threads指示一个cores下有多个threads
    maxcpus=maxcpus指定最大热插拔cpu个数，PC up to 255
    
-numa ???

-device driver[,prop[=value][,...]]
    添加一个设备驱动（虚拟设备）
    -device ? 列出支持的虚拟设备
    -device ide-drive,? 列出对应虚拟设备支持的属性
    例：-device ide-drive,drive=mydisk1
    

-pflash:见-drive
-drive option[,option[,option[,...]]]
    定义一个驱动器，类型和参数请参考帮助文档
    例：-drive file=test.img,if=none,index=1,format=raw,id=mydisk1
    另外，可以使用drive在qemu系统总线添加cfi.pflash01设备（有别于-bios）：
    -drive file=/opt/OVMF.fd,if=pflash,format=raw,unit=0,readonly=on
-global driver.prop=value
    设置某类虚拟设备属性的默认值，特别用于配置机器类型默认创建设备的属性
    例：-global ide-drive.physical_block_size=4096
-no-frame:见-display sdl
-alt-grab:见-display sdl
-ctrl-grab:见-display sdl
-display type
替代-sdl、-curses、-vnc
    选择显示类型，用于处理显卡的输入，支持的类型有(不包含spice):
    sdl:
    curses:
    egl-headless:
    gtk:
    vnc:
    none:
    可以分成:local displays(sdl|curses|cocoa|gtk)和remote displays(vnc|spice)两类
    参数-full_screen针对local displays
    支持多个display显示同一个显卡的输出，也可以显示不同显卡的输出
        sdl：为一个单独的图像窗口
        vnc：启动一个vnc server
        none：不显示显卡的输出数据，guest依然能看到显卡设备
        curses：有些显卡设备支持工作在文本模式（text mode，通常指VGA设备）
            调用curses库直接输出text，如果显卡工作在图像模式，那么什么都不会输出
    例1：-display vnc=127.0.0.1:1,id=primary
    例2：-display vnc=:2,id=secondary,display=video.2
-nographic
    禁用显卡同时重定向仿真的虚拟串口设备到宿主console
    
-vga type
    选择一个模拟的VGA卡，qemu只能配置一个设备，支持的类型有：
    cirrus： Cirrus Logic GD5446视频卡，windows全系支持，guest中应使用16位颜色深度
             最大分辨率为1024x768像素
    vmware：适用于vmware虚拟化平台时
    std：带有Bochs VBE扩展功能的标准VGA卡，VBE支持适用于高分辨率（windows支持）
         最高可测试2560x1600像素,后端可以使用spice
    qxl：半虚拟化图像卡，兼容VGA，Guest中安装qxl驱动后性能最佳
    none：Disable VGA card.

-chardev backend ,id=id [,mux=on|off] [,options]
    支持的后端字符设备有：
    null ,id=id:空设备，不发送任何数据，接收到的任何数据都会被丢弃
    socket,nodelay(对于write很小的数据,socket有优化可以合并后发送)
    udp,
    msmouse:
    vc:
    ringbuf: 用例:#qemu -chardev ringbuf,id=seabios,size=16k 之后使用(qmp)ringbuf_read/write读写
    file:
    pipe:
    console:
    serial:
    pty:
    stdio
    braille
    tty
    parallel
    parport
    spicevmc
    spiceport
    公共属性id="any string up to 127 characters"
    公共属性mux=on，激活多个前端（front-ends）复用一个字符设备模式
-monitor
    定义一个monitor,人机交互的窗口,例如: -monitor tcp:localhost:4444,server,nowait
                                         -monitor stdio
-qmp
    定一个json格式的交互接口,例如:-qmp telnet:localhost:4444,server,nowait
-mon
    用于取代-qmp和-monitor,需要指定一个chardev设备,例如:
    qemu [...] -chardev socket,id=mon1,host=localhost,port=4444,server,nowait,telnet
               -mon chardev=mon0,mode=readline -mon chardev=mon0,mode=readline

-boot [order=drives][,once=drives][,menu=on|off]
      [,splash=sp_name][,splash-time=sp_time]
      [,reboot-timeout=rb_timeout][,strict=on|off]
      
      order:可选值a, b (floppy 1 and 2)
                  c (first hard disk)*默认
                  d (first CD-ROM)
                  n-p (Etherboot from network adapter 1-4)
      once：首次启动从这引导,reboot后无效
      menu：当firmware/BIOS支持菜单时，可以打开菜单，默认是关闭的
      splash：传递24 BPP的jpeg或bmp真彩图片，依赖menu=on，依赖固件支持
               seabios支持，推荐分辨率320x240, 640x480, 800x640.
               图片显示时常为splash-time单位毫秒
      reboot-timeout：引导失败guest暂停rb_timeout(ms)然后尝试引导下个驱动器
                      如果都失败？？？
                      默认值为-1，表示引导失败后不重新引导
       strict=on表示严格按bootindex顺序引导(该值可动态修改)，默认是off
-no-acpi
    如果pc抱怨acpi问题，可以直接关闭(PC target machine only)
-acpitable [sig=str][,rev=n][,oem_id=str][,oem_table_id=str][,oem_rev=n]
           [,asl_compiler_id=str][,asl_compiler_rev=n][,data=file1[:file2]...]
    <stefanha> maqqieb: I don't know for sure but the qemu(1) man page suggests you always need a file: either to specify a full binary ACPI table (file=) or when you pass the header information on the command-line and just the payload in a file (data=).
    <stefanha> maqqieb: Also, this option seems to add an entire table.  If you just want to modify a specific entry in an existing table, then you may need to find another way.


-bios file
      选择该Machine的fireware
      对于PC（piix | q35）的大部分版本默认是/usr/share/qemu-kvm/bios-256k.bin文件
-dump-vmstate <file>
    转存虚机的状态，状态是用Json格式描述,迁移前后可以保持虚机状态通过
    scripts/vmstate-static-checker.py对比虚机状态文件判断是否迁移出现异常
-no-reboot
    虚机重启，qemu进程直接退出
-no-shutdown
    虚机关机，qemu进程暂停
-msg timestamp=on
    配置后qemu-error相关的输出会显示时间戳(缺省为on)
--only-migratable
    启动后，如果配置了不支持迁移的设备会无法运行qemu
特定系统的参数：
-enablefips
    打开加密，没啥用
    
-net [user|tap|bridge|socket][,vlan=n][,option][,option][,...]
    弃用，见-netdev
-netdev DEV选择网络后端设备，取代旧的-net配置，支持的后端设备有：
    user:
    tap: 创建一个tap接口
        用例： -netdev tap,id=net0 -device virtio-net-pci,netdev=hostnet0
        script=/path/script.sh | no,接口默认是DOWN的,可通过脚本自动启动
    bridge: 和tap设备相似
        用例：确保br0存在，然后添加acl规则开放权限，qemu自动会将tap加入或移除br0桥
              echo allow br0 > /etc/qemu-kvm/bridge.conf
              -netdev bridge,id=hostnet0,br=br0 -device e1000e,netdev=hostnet0
    l2tpv3:
    socket:
    vhost-user:
    hubport:
    
-smb
    废弃使用，"Please use '-netdev user,smb=...' instead."
-daemonize
    QEMU初始化后将其作为后台服务，父进程变为1，并且释放当前控制台
    通过ps可以查看
-runas qemu
    qemu进程所属用户，通过ps可查看是属于哪个用户
-chroot /opt/lessons
    启动VM前改变更路径，初始化时root没有改变，通过/proc可查看
-incoming
    -incoming defer
        等待通过migrate_incoming指定迁移监听的URI，指定URI后，其他QEMU可以发起迁移
        如果没有指定参数“-incoming defer”，在执行migrate_incoming tcp:127.0.0.1:9999
        等命令时会提示For use with '-incoming defer'， 而无法监听迁移
-rtc
    配置RTC芯片，RTC一般由主板电池供电
    windows推荐配置：确保windows在引导时使用平台时钟
                    (cmd)bcdedit /set USEPLATFORMCLOCK on
                    -rtc base=localtime,clock=vm,driftfix=slew
    linux推荐配置：


Debug/Expert options:
-fw_cfg
-S：在启动时冻结CPU，需要通过hmp命令“c”来恢复运行
-d xxx,yyy 
    记录一些专用调试日志输出，-d help可以查看支持输出哪些记录,逗号分隔
-pidfile file:
    例1：-pidfile /opt/myqemu.pid QEMU进程PID值会被写到文件中
-s：shorthand for -gdb tcp::1234
-gdb dev，等待gdb连接，#(gdb) target remote localhost:1234可以debug guest代码
          调试符号可以由gdb客户端添加。

其他：
-enable-fips 安全相关的




常用命令：
LC_ALL=C \
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
HOME=/var/lib/libvirt/qemu/domain-7-vm \
XDG_DATA_HOME=/var/lib/libvirt/qemu/domain-7-vm/.local/share \
XDG_CACHE_HOME=/var/lib/libvirt/qemu/domain-7-vm/.cache \
XDG_CONFIG_HOME=/var/lib/libvirt/qemu/domain-7-vm/.config \
QEMU_AUDIO_DRV=none \
QEMU_AUDIO_TIMER_PERIOD=125 \
/opt/lessons/qemu-system-x86_64 \
-name guest=vm,debug-threads=on \
-machine pc-i440fx-2.11,accel=kvm,usb=off,dump-guest-core=off,mem-merge=off \
-cpu host,kvm=off \
-m size=3301376k,slots=8,maxmem=268435456k \
-realtime mlock=off \
-smp 4,sockets=1,cores=4,threads=1 \
-numa node,nodeid=0,cpus=0-3,mem=3224 \
-uuid 535b4f21-9ed0-42a2-be94-0ccac09ced76 \
-no-user-config \
-nodefaults \
-rtc base=localtime,clock=vm,driftfix=slew \
-global kvm-pit.lost_tick_policy=delay \
-no-hpet \
-global PIIX4_PM.disable_s3=1 \
-global PIIX4_PM.disable_s4=0 \
-boot menu=off,strict=on \
-device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 \
-device virtio-serial-pci,id=virtio-serial0,bus=pci.0,addr=0x5 \
-cpu host,hv_relaxed,hv_spinlocks=0x1fff,hv_vapic,hv_time,kvm=off,hv_vendor_id=ruijienet_vm \
-bios /usr/share/qemu-kvm/seabios.bin \
-smbios type=0,vendor=RuiJie,version=1 \
-smbios type=1,manufacturer=RuiJie,product=ruijie,version=1,serial=ruijie01,family=RG-RCD,uuid=00000000-0000-0000-0000-000000000000 \
-smbios type=2,manufacturer=RuiJie,product=ruijie,serial=ruijie01,version=1 \
-smbios type=3,manufacturer=RuiJie,serial=ruijie01,version=1 \
-smbios type=17,manufacturer=RuiJie \
-sandbox off \
-vga none \
-msg timestamp=on \
-device usb-tablet \
-netdev user,id=net1 \
-device e1000e,netdev=net1,bus=pci.0,addr=0x10 \
-global i440FX-pcihost.allow-hotplug=false \
-spice port=5901,addr=0.0.0.0,plaintext-channel=default,seamless-migration=on \
-vnc 0.0.0.0:0 \
-device vfio-pci,host=00:02.0,id=hostdev0,bus=pci.0,addr=0x2 \
/opt/lessons/win10_clean.img

-device qxl-vga,id=video2,ram_size=134217728,vram_size=67108864,vram64_size_mb=0,max_outputs=1,addr=0x14,bus=pci.0,addr=0x2 \

-device qxl,id=video1,ram_size=134217728,vram_size=67108864,vram64_size_mb=0,max_outputs=1,addr=0x14,device-id=0x0100 \
-device qxl-vga,id=video0,ram_size=134217728,vram_size=67108864,vram64_size_mb=0,max_outputs=1,addr=0x2,device-id=0x0100 \

<qemu:arg value='-device'/>
<qemu:arg value='qxl,id=video1,ram_size=134217728,vram_size=67108864,vram64_size_mb=0,max_outputs=1,addr=0x14,device-id=0x0101'/>

i440FX-pcihost: add 'allow-hotplug' property for configuring whether to expose the
BSEL to the guest


